import React from 'react'
import {connect} from 'react-redux'
import {Link} from 'react-router-dom'
import {withRouter} from 'react-router'
import {compose} from 'redux'
import classNames from 'classnames'
import * as R from 'ramda'
//-
import {getCategories, getActiveCategoryId} from 'selectors'

const Categories = (props) => {

  const {categories, activeCategoryId} = props

//   //как работает classnames - это метод который возвращает метод по условию как бы, напрмер:
//   const a = classNames({
//     'bar': true,    //ЭТО УСЛОВИЕ ВСЕГДА ВЫПОЛНЯЕТСЯ
//     'block': 1=='1'    //ЭТО ТОЖЕ ВСЕГДА ВЫПОЛНЯЕТСЯ
//   })
//
// //результат: a='bar block'


  const renderCategory = (category, index) => {

    const linkClass = classNames({
      'list-group-item': true,
      'active': category.id == activeCategoryId
    })

    return (
      <Link to={`/categories/${category.id}`} className={linkClass} key={index}>{category.name}</Link>
    )
  }

  //кнопка с категорией All
  const renderAllCategory = () => {
    const linkClass = classNames({
      'list-group-item': true,
      'active': activeCategoryId === null || activeCategoryId === undefined
    })

    return (
      <Link to='/' className={linkClass}>All</Link>
    )
  }

  return (
    <div className='well'>
      <h4>Brand</h4>
      <div className="list-group">
        {renderAllCategory()}
        {categories.map((category, index) => renderCategory(category, index))}
      </div>
    </div>
  )
}

const mapStateToProps = (state, ownProps) => {
  return {
    categories: getCategories(state),
    activeCategoryId: getActiveCategoryId(ownProps)
  }
}

// export default withRouter(connect(mapStateToProps)(Categories))
export default compose(   //compose - ОЧЕНЬ ПРИКОЛЬНАЯ ОБЕРТКА ДЛЯ HOK КОМПОНЕНТОВ, ЧТОБЫ НЕ ГОРОДИТЬ МИЛЛИАРД ОБЕРТОК ДЛЯ HOOK НАПРИМЕР ТАКИХ: withRouter(connect(mapStateToProps)(Categories))
  withRouter,
  connect(mapStateToProps)
)(Categories)