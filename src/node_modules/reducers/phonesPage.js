import { FETCH_PHONES_SUCCESS, LOAD_MORE_PHONES_SUCCESS } from 'actionTypes';

import * as R from 'ramda';


const initialState = {
    ids: []
};


export default (state = initialState, action) => {
    const { type, payload } = action;
    switch (type) {
        case FETCH_PHONES_SUCCESS:
            const phonesIds = R.pluck('id', payload); //типа этого: payload.Select(x=>x.id); //т.е. выбираем одни только id 
            return R.merge(state, { ids: phonesIds }); //мержим в основной стейт (создавая новый объект т.к. рамда - иммутабельна)
        case LOAD_MORE_PHONES_SUCCESS:
            const ids = R.pluck('id', payload);
            return R.merge(state, { ids: R.concat(state.ids, ids) }); // конкатинируем id которые уже были с id-шниками которые получили еще (для пейджинга)
        default:
            return state;
    }
}

