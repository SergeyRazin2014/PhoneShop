import React, { Component } from 'react';
import { Link } from 'react-router-dom';
import { connect } from 'react-redux';
import * as R from 'ramda';

import { fetchPhones, loadMorePhones, addPhoneToBasket } from 'actions';
import { getPhones } from 'selectors';
import Layout from 'containers/layout';

class Phones extends Component {

    componentDidMount() {
        this.props.fetchPhones(); //загрузить все телефоны //fetchPhones - это акшен в thunk
    }

    //функция которая рендерит наши телефоны в  map (т.е. рендерит один телефон)
    renderPhone(phone, index) {

        //короткое описание телефона (берем 60 симовлов из phone.description)
        const shortDescription = `${R.take(60, phone.description)}...`;  //метод R.take(60, phone.description) - берет 60 символов из строки phone.description (думаю и с массивами проканает)
        const { addPhoneToBasket } = this.props;

        return (
            <div className="col-sm-4 col-lg-4 col-md-4 book-list" key={index}>
                <div className="thumbnail">
                    <img className='img-thumbnail' src={phone.image} alt={phone.name} />
                    <div className="caption">
                        <h4 className='pull-right'> ${phone.price} </h4>
                        <h4>
                            {/* тут url будет примерно такой: http://localhost:3000/phones/1    т.е. id передаем в url */}
                            <Link to={`/phones/${phone.id}`}>
                                {phone.name}
                            </Link>
                        </h4>
                        <p>{shortDescription}</p>
                        <p className="itemButton">
                            <button
                                className="btn btn-primary"
                                onClick={() => addPhoneToBasket(phone.id)}
                            >
                                Buy now!
                             </button>
                            <Link to={`/phones/${phone.id}`} className='btn btn-default'>
                                More info
                            </Link>
                        </p>
                    </div>
                </div>

            </div>
        )
    }

    render() {
        const { phones, loadMorePhones } = this.props;

        return (

            // для главной страницы телефонов нужен лейаут (эта страница будет завернута в лейаут)
            <Layout>
                <div>
                    {phones.map((phone, index) => this.renderPhone(phone, index))}
                </div>
                <div className="row">
                    <div className="col-md-12">
                        <button onClick={loadMorePhones}
                            className='pull-right btn btn-primary' >
                            Load more
                        </button>
                    </div>
                </div>
            </Layout>
        )
    }
}

const mapStateToProps = (state) => {

    //найти все телефоны из общих загруженных телефонов для этой страницы по массиву id
    return {
        phones: getPhones(state)
    }
}

const mapDispatchToProps = {
    fetchPhones,
    loadMorePhones,
    addPhoneToBasket
}

export default connect(mapStateToProps, mapDispatchToProps)(Phones);