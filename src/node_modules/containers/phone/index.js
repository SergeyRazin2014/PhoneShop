import React, { Component } from 'react';
import { connect } from 'react-redux';
import { Link } from 'react-router-dom';
import * as R from 'ramda';
//--
import { fetchPhoneById as fetchPhoneByIdApi } from 'actions';
import { addPhoneToBasket } from 'actions';
import { getPhoneById } from 'selectors';
import BasketCart from 'components/basketCart';


class Phone extends Component {

    componentDidMount() {
        const phoneId = this.props.match.params.id; // получаем параметр из url строки типа из такой:  http://localhost:3000/phones/1    получаем 1
        this.props.fetchPhoneByIdApi(phoneId);
    }

    renderFields() {
        const { phone } = this.props;

        //делаем массив массивов примерно такой
        //[["имя телефона", "марка телефона", "цена"],[....]]
        //R.compose(a,b,c)(phones); //a,b,c - это функции которые вызываются слева на право (сначала с , потом b, потом a) над коллекцией phones причем, результат из c переходит в b, результат из b переходит в a   (функций может быть сколько угодно)

        const columnField = R.compose(
            R.toPairs, //делает массив массивов из объекта так:  {name: 'bob', age: 22} ->  [['name', 'bob], ['age', 22]]   т.е. типа св-во (ключ) и значение в одном массиве
            R.pick(  //эта функция на основе одного объекта создаст другой, но в этот другой положит только те св-ва которые мы указали в массиве
                [
                    'cpu',
                    'camera',
                    'size',
                    'weight',
                    'display',
                    'battery',
                    'memory'
                ]
            )
        )(phone);

        return (
            //выводим поля телефона  (камера: 16px, вес: 10кг..)  из нашего двумерного массива
            columnField.map(([key, value]) => {
                return (
                    <div key={key} className="column" >
                        <div className="ab-details-title">
                            <p>{key}</p>
                        </div>
                        <div className="ab-details-info">
                            {value}
                        </div>
                    </div>
                )
            })
        )
    }

    renderContent() {
        const { phone } = this.props;

        return (
            <div className='thumbnail'>
                <div className="row">
                    <div className="col-md-6">
                        <img className='img-thumbnail' src={phone.image} alt={phone.name} />
                    </div>
                    <div className="col-md-6">
                        {this.renderFields()}
                    </div>
                </div>
                <div className="caption-full">
                    <h4 className="pull-right" >${phone.price}</h4>
                    <h4>{phone.name}</h4>
                    <p>{phone.description}</p>
                </div>
            </div>
        )
    }

    renderSidebar() {

        const { phone, addPhoneToBasket } = this.props;

        return (
            <div>
                <div>
                    <p className="lead">
                        Quick shop
                </p>
                    <BasketCart />
                </div>
                <div className="form-group">
                    <h1>{phone.name}</h1>
                    <h2>{phone.price}$</h2>
                </div>
                <Link to='/' className='btn btn-info btn-block'>Back to store</Link>
                <button type='button' className="btn btn-success btn-block" onClick={() => addPhoneToBasket(phone.id)}>Buy</button>
            </div>
        )
    }



    render() {

        const { phone } = this.props;

        return (
            <div className="view-container">
                <div className="container">
                    <div className="row">
                        <div className="col-md-9">
                            {phone && this.renderContent()}
                        </div>
                        <div className="col-md-3">
                            {phone && this.renderSidebar()}
                        </div>
                    </div>
                </div>
            </div>
        )
    }
}

const mapStateToProps = (state) => {
    return {
        phone: getPhoneById(state, state.phonePage.id)
    }
}

const mapDispatchToProps = {
    fetchPhoneByIdApi,
    addPhoneToBasket
}

export default connect(mapStateToProps, mapDispatchToProps)(Phone);
